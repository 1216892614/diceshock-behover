/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routers/__root'
import { Route as Char123Site_nameChar125RouteImport } from './routers/{-$site_name}'
import { Route as Char123Site_nameChar125IndexRouteImport } from './routers/{-$site_name}/index'

const Char123Site_nameChar125Route = Char123Site_nameChar125RouteImport.update({
  id: '/{-$site_name}',
  path: '/{-$site_name}',
  getParentRoute: () => rootRouteImport,
} as any)
const Char123Site_nameChar125IndexRoute =
  Char123Site_nameChar125IndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => Char123Site_nameChar125Route,
  } as any)

export interface FileRoutesByFullPath {
  '/{-$site_name}': typeof Char123Site_nameChar125RouteWithChildren
  '/{-$site_name}/': typeof Char123Site_nameChar125IndexRoute
}
export interface FileRoutesByTo {
  '/{-$site_name}': typeof Char123Site_nameChar125IndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/{-$site_name}': typeof Char123Site_nameChar125RouteWithChildren
  '/{-$site_name}/': typeof Char123Site_nameChar125IndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/{-$site_name}' | '/{-$site_name}/'
  fileRoutesByTo: FileRoutesByTo
  to: '/{-$site_name}'
  id: '__root__' | '/{-$site_name}' | '/{-$site_name}/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  Char123Site_nameChar125Route: typeof Char123Site_nameChar125RouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/{-$site_name}': {
      id: '/{-$site_name}'
      path: '/{-$site_name}'
      fullPath: '/{-$site_name}'
      preLoaderRoute: typeof Char123Site_nameChar125RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/{-$site_name}/': {
      id: '/{-$site_name}/'
      path: '/'
      fullPath: '/{-$site_name}/'
      preLoaderRoute: typeof Char123Site_nameChar125IndexRouteImport
      parentRoute: typeof Char123Site_nameChar125Route
    }
  }
}

interface Char123Site_nameChar125RouteChildren {
  Char123Site_nameChar125IndexRoute: typeof Char123Site_nameChar125IndexRoute
}

const Char123Site_nameChar125RouteChildren: Char123Site_nameChar125RouteChildren =
  {
    Char123Site_nameChar125IndexRoute: Char123Site_nameChar125IndexRoute,
  }

const Char123Site_nameChar125RouteWithChildren =
  Char123Site_nameChar125Route._addFileChildren(
    Char123Site_nameChar125RouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  Char123Site_nameChar125Route: Char123Site_nameChar125RouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
